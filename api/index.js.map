{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/pedroreyes/Documents/DayOnes/kudos/app/root.tsx", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/avatar.tsx", "../app/utils/prisma.server.ts", "../app/utils/auth.server.ts", "../app/utils/users.server.ts", "../app/utils/s3.server.ts", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/logout.ts", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/index.ts", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/login.tsx", "../app/components/FormField.tsx", "../app/components/Layout.tsx", "../app/utils/validators.server.ts", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home.tsx", "../app/components/UserPanel.tsx", "../app/components/UserCircle.tsx", "../app/utils/kudos.serve.ts", "../app/utils/constants.ts", "../app/routes/home/kudo.tsx", "../app/components/SearchBar.tsx", "../app/components/SelectBox.tsx", "../app/components/RecentBar.tsx", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home/kudo.$userId.tsx", "../app/components/Modal.tsx", "../app/components/Portal.tsx", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home/profile.tsx", "../app/components/ImageUploader.tsx", "/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home/kudo.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from './styles/app.css';\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }]\n}\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "// app/routes/avatar.tsx\nimport { ActionFunction, json } from \"@remix-run/node\";\nimport { requireUserId } from \"~/utils/auth.server\";\nimport { uploadAvatar } from \"~/utils/s3.server\";\nimport { prisma } from \"~/utils/prisma.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const imageUrl = await uploadAvatar(request);\n\n  await prisma.user.update({\n    data: {\n      profile: {\n        update: {\n          profilePicture: imageUrl,\n        },\n      },\n    },\n    where: {\n      id: userId,\n    },\n  });\n\n  return json({ imageUrl });\n};\n", "import { PrismaClient } from '@prisma/client'\n\nlet prisma: PrismaClient\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient()\n  prisma.$connect()\n} else {\n  // Prevents multiple connections to db while developing\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  prisma = global.__db\n}\n\nexport { prisma }\n", "import { prisma } from \"./prisma.server\";\nimport { LoginForm, RegisterForm } from \"./types.server\";\nimport { createCookieSessionStorage, json, redirect } from '@remix-run/node'\nimport { createUser } from './users.server';\nimport bcrypt from 'bcryptjs';\n\nconst sessionSecret = process.env.SESSION_SECRET\nif (!sessionSecret) {\n  throw new Error('SESSION_SECRET must be set')\n}\nconst storage = createCookieSessionStorage({\n  cookie: {\n    name: 'kudos-session',\n    secure: process.env.NODE_ENV === 'production',\n    secrets: [sessionSecret],\n    sameSite: 'lax',\n    path: '/',\n    maxAge: 60 * 60 * 24 * 30,\n    httpOnly: true,\n  }\n})\n\nexport async function register(user: RegisterForm) {\n  const exists = await prisma.user.count({ where: { email: user.email }})\n  if (exists) {\n    return json({ error: 'User already exists with that email' }, { status: 400 })\n  }\n\n  const newUser = await createUser(user)\n  if (!newUser) {\n    return json({\n      error: `Somthing went wrong trying to create a new user.`,\n      fields: {email: user.email, password: user.password}\n    }, {\n      status: 400\n    })\n  }\n  return createUserSession(newUser.id, '/')\n}\n\nexport async function login({ email, password }: LoginForm) {\n  const user = await prisma.user.findUnique({ where: {email}})\n\n  if (!user || !(await bcrypt.compare(password, user.password))) {\n    return json({error: 'Incorrect login'}, {status: 400})\n  }\n  return createUserSession(user.id, '/')\n}\n\nexport async function createUserSession(userId:string, redirectTo: string) {\n  const session = await storage.getSession()\n  session.set('userId', userId)\n  return redirect(redirectTo, {\n    headers: {\n      'Set-Cookie': await storage.commitSession(session)\n    }\n  })\n}\n\nexport async function requireUserId(request: Request, redirectTo: string = new URL(request.url).pathname) {\n  const session = await getUserSession(request)\n  const userId = session.get('userId')\n  if (!userId || typeof userId !== 'string') {\n    const searchParams = new URLSearchParams([['redirectTo', redirectTo]])\n    throw redirect(`/login?${searchParams}`)\n  }\n  return userId\n}\n\nfunction getUserSession(request: Request) {\n  return storage.getSession(request.headers.get('Cookie'))\n}\n\nasync function getUserId(request: Request) {\n  const session = await getUserSession(request)\n  const userId = session.get('userId')\n  if (!userId || typeof userId !== 'string') return null\n  return userId\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request)\n  if (typeof userId !== 'string') {\n    return null\n  }\n\n  try {\n    const user = await prisma.user.findUnique({\n      where: {id: userId},\n      select: {id: true, email: true, profile: true}\n    })\n    return user\n  } catch {\n    throw logout(request)\n  }\n}\n\nexport async function logout(request:Request) {\n  const session = await getUserSession(request)\n  return redirect('/login', {\n    headers: {\n      'Set-Cookie': await storage.destroySession(session)\n    }\n  })\n}\n", "import { Profile } from '@prisma/client'\nimport bcrypt from 'bcryptjs'\nimport { prisma } from './prisma.server'\nimport type { RegisterForm } from \"./types.server\"\n\nexport const createUser = async (user: RegisterForm) => {\n  const passwordHash = await bcrypt.hash(user.password, 10)\n  const newUser = await prisma.user.create({\n    data: {\n      email: user.email,\n      password: passwordHash,\n      profile: {\n        firstName: user.firstName,\n        lastName: user.lastName,\n      }\n    }\n  })\n  return { id: newUser.id, email: user.email }\n}\n\nexport const updateUser = async (userId: string, profile: Partial<Profile>) => {\n  await prisma.user.update({\n    where: {\n      id: userId\n    },\n    data: {\n      profile: {\n        update: profile\n      }\n    }\n  })\n}\n\nexport const deleteUser = async (id:string) => {\n  await prisma.user.delete({where: {id}})\n}\n\nexport const getOtherUsers = async (userId: string) => {\n  return await prisma.user.findMany({\n    where: { id: { not: userId } },\n    orderBy: { profile: { firstName: 'asc' } }\n  })\n}\n\nexport const getUserById = async (userId: string) => {\n  return await prisma.user.findUnique({where: {id: userId}})\n}\n", "import {\n  unstable_parseMultipartFormData,\n  UploadHandler,\n} from \"@remix-run/node\";\nimport S3 from \"aws-sdk/clients/s3\";\nimport cuid from \"cuid\";\n\n// 1\nconst s3 = new S3({\n  region: process.env.KUDOS_BUCKET_REGION,\n  accessKeyId: process.env.KUDOS_ACCESS_KEY_ID,\n  secretAccessKey: process.env.KUDOS_SECRET_ACCESS_KEY,\n});\n\nexport const uploadHandler: UploadHandler = async ({name, filename, stream}) => {\n  if (name !== \"profile-pic\") {\n    stream.resume()\n    return\n  }\n  const { Location } = await s3.upload({\n    Bucket: process.env.KUDOS_BUCKET_NAME || \"\",\n    Key: `${cuid()}.${filename.split(\".\").slice(-1)}`,\n    Body: stream\n  }).promise()\n  return Location\n}\n\nexport const uploadAvatar = async (request: Request) => {\n  const formData = await unstable_parseMultipartFormData(request, uploadHandler)\n  const file = formData.get(\"profile-pic\")?.toString() || \"\"\n  return file\n}\n", "import { ActionFunction, LoaderFunction, redirect } from \"@remix-run/node\";\nimport { logout, requireUserId } from '~/utils/auth.server';\n\nexport const action: ActionFunction = async ({request}) => logout(request)\nexport const loader: LoaderFunction = async () => redirect('/')\n", "import { LoaderFunction, redirect } from \"@remix-run/node\";\nimport { requireUserId } from '~/utils/auth.server';\n\n//Check if the user is in the session, else redirect to login\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireUserId(request)\n  return redirect('/home')\n}\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport { useActionData } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { FormField } from \"~/components/FormField\";\nimport { Layout } from \"~/components/Layout\";\nimport { getUser, login, register } from \"~/utils/auth.server\";\nimport {\n  validateEmail,\n  validatePassword,\n  validateName,\n} from \"../utils/validators.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // If there's already a user in the session, redirect to the home page\n  return (await getUser(request)) ? redirect(\"/\") : null;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const action = form.get(\"_action\");\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  let firstName = form.get(\"firstName\");\n  let lastName = form.get(\"lastName\");\n\n  if (\n    typeof action !== \"string\" ||\n    typeof email !== \"string\" ||\n    typeof password !== \"string\"\n  ) {\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 });\n  }\n\n  if (\n    action === \"register\" &&\n    (typeof firstName !== \"string\" || typeof lastName !== \"string\")\n  ) {\n    return json({ error: `Invalid Form Data`, form: action }, { status: 400 });\n  }\n\n  const errors = {\n    email: validateEmail(email),\n    password: validatePassword(password),\n    ...(action === \"register\"\n      ? {\n          firstName: validateName((firstName as string) || \"\"),\n          lastName: validateName((lastName as string) || \"\"),\n        }\n      : {}),\n  };\n\n  if (Object.values(errors).some(Boolean)) {\n    return json(\n      {\n        errors,\n        fields: { email, password, firstName, lastName },\n        form: action,\n      },\n      { status: 400 }\n    );\n  }\n\n  switch (action) {\n    case \"login\": {\n      return await login({ email, password });\n    }\n    case \"register\": {\n      firstName = firstName as string;\n      lastName = lastName as string;\n      return await register({ email, password, firstName, lastName });\n    }\n    default:\n      return json({ error: \"Invalid Form Data\" }, { status: 400 });\n  }\n};\n\nexport default function Login() {\n  const [action, setAction] = useState(\"login\");\n  const actionData = useActionData();\n  const firstLoad = useRef(true);\n  const [errors, setErrors] = useState(actionData?.errors || {});\n  const [formError, setFormError] = useState(actionData?.error || \"\");\n  const [formData, setFormData] = useState({\n    email: actionData?.fields?.email || \"\",\n    password: actionData?.fields?.password || \"\",\n    firstName: actionData?.fields?.lastName || \"\",\n    lastName: actionData?.fields?.firstName || \"\",\n  });\n\n  useEffect(() => {\n    if (!firstLoad.current) {\n      const newState = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n      };\n      setErrors(newState);\n      setFormError(\"\");\n      setFormData(newState);\n    }\n  }, [action]);\n\n  useEffect(() => {\n    if (!firstLoad.current) {\n      setFormError(\"\");\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    firstLoad.current = false;\n  }, []);\n\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    setFormData((form) => ({ ...form, [field]: event.target.value }));\n  };\n  return (\n    <Layout>\n      <div className=\"h-full justify-center items-center flex flex-col gap-y-4\">\n        <button\n          onClick={() => setAction(action == \"login\" ? \"register\" : \"login\")}\n          className=\"absolute top-8 right-8 rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n        >\n          {action === \"login\" ? \"Sign Up\" : \"Sign In\"}\n        </button>\n        <h2 className=\"text-5xl font-extrabold text-yellow-300\">\n          Welcome to Kudos!\n        </h2>\n        <p className=\"font-semibold text-slate-300\">\n          {action === \"login\"\n            ? \"Log In To Give Some Praise!\"\n            : \"Sign Up To Get Started!\"}\n        </p>\n\n        <form method=\"post\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\n          <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\n            {formError}\n          </div>\n\n          <FormField\n            htmlFor=\"email\"\n            label=\"Email\"\n            value={formData.email}\n            onChange={(e) => handleInputChange(e, \"email\")}\n            error={errors?.email}\n          />\n          <FormField\n            htmlFor=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formData.password}\n            onChange={(e) => handleInputChange(e, \"password\")}\n            error={errors?.password}\n          />\n          {action === \"register\" && (\n            <>\n              <FormField\n                htmlFor=\"firstName\"\n                label=\"First Name\"\n                value={formData.firstName}\n                onChange={(e) => handleInputChange(e, \"firstName\")}\n                error={errors?.firsName}\n              />\n              <FormField\n                htmlFor=\"lastName\"\n                label=\"Last Name\"\n                value={formData.lastName}\n                onChange={(e) => handleInputChange(e, \"lastName\")}\n                error={errors?.lastName}\n              />\n            </>\n          )}\n\n          <div className=\"w-full text-center\">\n            {/* can assign button a 'value' when 'name' attribute has an underscore*/}\n            <button\n              type=\"submit\"\n              name=\"_action\"\n              value={action}\n              className=\"rounded-xl mt-2 bg-yellow-300 px-3 py-2 text-blue-600 font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n            >\n              {action === \"login\" ? \"Sign In\" : \"Sign Up\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </Layout>\n  );\n}\n", "import { useEffect, useState } from \"react\"\n\ninterface FormFieldProps {\n  htmlFor: string\n  label: string\n  type?: string\n  value: any\n  onChange?: (...args: any) => any\n  error?: string\n}\n\nexport function FormField({ htmlFor, label, type = 'text', value, onChange = () => {}, error = \"\"}: FormFieldProps) {\n  const [errorText, setErrorText] = useState(error)\n  useEffect(() => {\n    setErrorText(error)\n  }, [error])\n\n  return (\n    <>\n      <label htmlFor={htmlFor} className=\"text-blue-600 font-semibold\">\n        {label}\n      </label>\n      <input\n        onChange={(e) => {\n          onChange(e)\n          setErrorText('')\n        }}\n        type={type}\n        name={htmlFor}\n        className=\"w-full p-2 rounded-xl my-2\"\n        value={value}\n      />\n      <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full\">\n            {errorText || ''}\n        </div>\n    </>\n  )\n}\n", "export function Layout({ children }: { children: React.ReactNode }) {\n  return <div className=\"h-screen w-full bg-blue-600 font-mono\">{children}</div>\n}\n", "export const validateEmail = (email: string): string | undefined => {\n  var validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  if (!email.length || !validRegex.test(email)) {\n    return \"Please enter a valid email address\"\n  }\n}\n\nexport const validatePassword = (password: string): string | undefined => {\n  if (password.length < 5) {\n    return \"Please enter a password that is at least 5 characters long\"\n  }\n}\n\nexport const validateName = (name: string): string | undefined => {\n  if (!name.length) return `Please enter a value`\n}\n", "import { LoaderFunction, json } from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { Layout } from \"~/components/Layout\";\nimport { UserPanel } from \"~/components/UserPanel\";\nimport { requireUserId } from \"~/utils/auth.server\";\nimport { getOtherUsers } from \"~/utils/users.server\";\nimport { Kudo as IKudo, Profile, Prisma } from \"@prisma/client\";\nimport { getFilteredKudos } from \"~/utils/kudos.serve\";\nimport { Kudo } from \"./home/kudo\";\nimport { SearchBar } from \"~/components/SearchBar\";\nimport { sortOptions } from \"~/utils/constants\";\nimport { getRecentKudos } from \"../utils/kudos.serve\";\nimport { RecentBar } from \"~/components/RecentBar\";\nimport { getUser } from \"~/utils/auth.server\";\n\ninterface KudoWithProfile extends IKudo {\n  author: {\n    profile: Profile;\n  };\n}\n\n//loader functions work on the server\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const url = new URL(request.url);\n  const sort = url.searchParams.get(\"sort\");\n  const filter = url.searchParams.get(\"filter\");\n  let sortOptions: Prisma.KudoOrderByWithRelationInput = {};\n  if (sort) {\n    if (sort === \"date\") {\n      sortOptions = { createdAt: \"desc\" };\n    }\n    if (sort === \"sender\") {\n      sortOptions = { author: { profile: { firstName: \"asc\" } } };\n    }\n    if (sort === \"emoji\") {\n      sortOptions = { style: { emoji: \"asc\" } };\n    }\n  }\n\n  let textFilter: Prisma.KudoWhereInput = {};\n  if (filter) {\n    textFilter = {\n      OR: [\n        { message: { mode: \"insensitive\", contains: filter } },\n        {\n          author: {\n            OR: [\n              {\n                profile: {\n                  is: { firstName: { mode: \"insensitive\", contains: filter } },\n                },\n              },\n              {\n                profile: {\n                  is: { lastName: { mode: \"insensitive\", contains: filter } },\n                },\n              },\n            ],\n          },\n        },\n      ],\n    };\n  }\n\n  const user = await getUser(request);\n  const users = await getOtherUsers(userId);\n  const kudos = await getFilteredKudos(userId, sortOptions, textFilter);\n  const recentKudos = await getRecentKudos();\n  return json({ user, users, kudos, recentKudos });\n};\n\nexport default function Home() {\n  const { user, users, kudos, recentKudos } = useLoaderData();\n  return (\n    <Layout>\n      <Outlet />\n      <div className=\"h-full flex\">\n        <UserPanel users={users} />\n        <div className=\"flex-1 flex flex-col\">\n          <SearchBar profile={user.profile} />\n          <div className=\"flex-1 flex\">\n            <div className=\"w-full p-10 flex flex-col gap-y-4\">\n              {kudos.map((kudo: KudoWithProfile) => (\n                <Kudo key={kudo.id} kudo={kudo} profile={kudo.author.profile} />\n              ))}\n            </div>\n            <RecentBar kudos={recentKudos} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n", "import { User } from \"@prisma/client\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { UserCircle } from \"./UserCircle\";\n\nexport function UserPanel({ users }: { users: User[] }) {\n  const navigate = useNavigate()\n  return (\n    <div className=\"w-1/6 bg-gray-200 flex flex-col\">\n      <div className=\"text-center bg-gray-300 h-20 flex items-center justify-center\">\n        <h2 className=\"text-xl text-blue-600 font-semibold\">My Team</h2>\n      </div>\n      <div className=\"flex-1 overflow-y-scroll py-4 flex flex-col gap-y-10\">\n        {users.map(user => (\n          <UserCircle\n            key={user.id}\n            profile={user.profile}\n            className=\"h-24 w-24 mx-auto flex-shrink-0\"\n            onClick={() => navigate(`/home/kudo/${user.id}`)} />\n        ))}\n      </div>\n      <div className=\"text-center p-6 bg-gray-300\">\n        <form action=\"/logout\" method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n        >\n          Sign Out\n        </button>\n        </form>\n      </div>\n    </div>\n\n  )\n}\n", "import { Profile } from \"@prisma/client\";\n\ninterface Props {\n  profile: Profile\n  className?: string\n  onClick?: (...args: any) => any\n}\nexport const UserCircle = ({ profile, onClick, className}: Props) => {\n  return (\n    <div\n      className={`${className} cursor-pointer bg-gray-400 rounded-full flex justify-center items-center`}\n      onClick={onClick}\n      style={{\n        backgroundSize: \"cover\",\n        ...(profile.profilePicture ? { backgroundImage: `url(${profile.profilePicture})` } : {}),\n    }}\n      >\n        {\n           !profile.profilePicture && (\n              <h2>{profile.firstName.charAt(0).toUpperCase()}{profile.lastName.charAt(0).toUpperCase()}</h2>\n           )\n        }\n      </div>\n  )\n};\n", "\nimport { KudoStyle, Prisma } from '@prisma/client';\nimport { prisma } from './prisma.server';\n\nexport const createKudo = async (message: string, userId: string, recipientId: string, style: KudoStyle) => {\n  await prisma.kudo.create({\n    data: {\n      message,\n      style,\n      author: {\n        connect: {\n          id: userId\n        }\n      },\n      recipient: {\n        connect: {\n          id: recipientId\n        }\n      }\n    }\n  })\n}\n\nexport const getFilteredKudos = async (\n  userId: string,\n  sortFilter: Prisma.KudoOrderByWithRelationInput,\n  whereFilter: Prisma.KudoWhereInput\n) => {\n  return await prisma.kudo.findMany({\n    select: {\n      id: true,\n      style: true,\n      message: true,\n      author: {\n        select: {\n          profile: true,\n        },\n      },\n    },\n    orderBy: {\n      ...sortFilter,\n    },\n    where: {\n      recipientId: userId,\n      ...whereFilter,\n    },\n  })\n}\n\nexport const getRecentKudos = async () => {\n  return await prisma.kudo.findMany({\n    take: 3,\n    orderBy: {\n      createdAt: 'desc'\n    },\n    select: {\n      style: {\n        select: {\n          emoji: true,\n        }\n      },\n      recipient: {\n        select: {\n          id: true,\n          profile: true\n        }\n      }\n    },\n  })\n}\n", "export enum ColorMap {\n  RED = 'text-red-400',\n  GREEN = 'text-green-400',\n  BLUE = 'text-blue-400',\n  WHITE = 'text-white',\n  YELLOW = 'text-yellow-300',\n}\n\nexport enum BackgroundColorMap {\n  RED = 'bg-red-400',\n  GREEN = 'bg-green-400',\n  BLUE = 'bg-blue-400',\n  WHITE = 'bg-white',\n  YELLOW = 'bg-yellow-300',\n}\n\nexport enum EmojiMap {\n  THUMBSUP = '\uD83D\uDC4D',\n  PARTY = '\uD83C\uDF89',\n  HANDSUP = '\uD83D\uDE4C\uD83C\uDFFB',\n}\n\nexport const sortOptions = [\n  {\n    name: 'Date',\n    value: 'date',\n  },\n  {\n    name: 'Sender Name',\n    value: 'sender',\n  },\n  {\n    name: 'Emoji',\n    value: 'emoji',\n  },\n]\n\nexport const departments = [\n  { name: \"HR\", value: \"HR\" },\n  { name: \"Engineering\", value: \"ENGINEERING\" },\n  { name: \"Sales\", value: \"SALES\" },\n  { name: \"Marketing\", value: \"MARKETING\" },\n];\n", "import { UserCircle } from '~/components/UserCircle'\nimport { Profile, Kudo as IKudo } from '@prisma/client'\nimport { ColorMap, BackgroundColorMap, EmojiMap } from '~/utils/constants'\n\nexport function Kudo({ profile, kudo }: { profile: Profile; kudo: Partial<IKudo> }) {\n  console.log({profile})\n  console.log(ColorMap[kudo.style?.textColor || 'WHITE'])\n\n  return (\n    <div\n      className={`flex ${\n        BackgroundColorMap[kudo.style?.backgroundColor || 'RED']\n      } p-4 rounded-xl w-full gap-x-2 relative`}\n    >\n      <div>\n        <UserCircle profile={profile} className=\"h-16 w-16\" />\n      </div>\n      <div className=\"flex flex-col\">\n        <p className={`${ColorMap[kudo.style?.textColor || 'WHITE']} font-bold text-lg whitespace-pre-wrap break-all`}>\n          {profile?.firstName} {profile?.lastName}\n        </p>\n        <p className={`${ColorMap[kudo.style?.textColor || 'WHITE']} whitespace-pre-wrap break-all`}>{kudo.message}</p>\n      </div>\n      <div className=\"absolute bottom-4 right-4 bg-white rounded-full h-10 w-10 flex items-center justify-center text-2xl\">\n        {EmojiMap[kudo.style?.emoji || 'THUMBSUP']}\n      </div>\n    </div>\n  )\n}\n", "import { useNavigate, useSearchParams } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { SelectBox } from \"~/components/SelectBox\";\nimport { sortOptions } from \"~/utils/constants\";\nimport { Profile } from \"@prisma/client\";\nimport { UserCircle } from \"./UserCircle\";\n\ninterface Props {\n  profile: Profile;\n}\nexport const SearchBar = ({ profile }: Props) => {\n  const navigate = useNavigate();\n  let [searchParams] = useSearchParams();\n  const [sort, setSort] = useState(\"date\");\n\n  const clearFilters = () => {\n    searchParams.delete(\"filter\");\n    searchParams.delete(\"sort\");\n    navigate(\"/home\");\n  };\n\n  const handleSortChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setSort(e.target.value);\n  };\n\n  return (\n    <form className=\"w-full px-6 flex items-center gap-x-4 border-b-4 border-b-blue-900 border-opacity-30 h-20\">\n      <div className={`flex items-center w-2/5`}>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className=\"w-full rounded-xl px-3 py-2\"\n          placeholder=\"Search a message or name\"\n        />\n        <svg\n          className=\"w-4 h-4 fill-current text-gray-400 -ml-8\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n          <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n        </svg>\n      </div>\n      <SelectBox\n        className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n        containerClassName=\"w-40\"\n        name=\"sort\"\n        options={sortOptions}\n        value={sort}\n        onChange={(e) => handleSortChange(e)}\n      />\n      <button\n        type=\"submit\"\n        className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n      >\n        Search\n      </button>\n      {searchParams.get(\"filter\") && (\n        <button\n          onClick={clearFilters}\n          className=\"rounded-xl bg-red-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n        >\n          Clear Filters\n        </button>\n      )}\n      <div className=\"flex-1\" />\n      <UserCircle\n        className=\"h-14 w-14 transition duration-300 ease-in-out hover:scale-110 hover:border-2 hover:border-yellow-300\"\n        profile={profile}\n        onClick={() => navigate(\"profile\")}\n      />\n    </form>\n  );\n};\n", "\ninterface Props {\n  options: {\n    name: string\n    value: any\n  }[]\n  className?: string\n  containerClassName?: string\n  id?: string\n  name?: string\n  label?: string\n  value?: any\n  onChange?: (...args: any) => any\n}\n\nexport const SelectBox = ({\n  options = [],\n  onChange = () => {},\n  className = '',\n  containerClassName = '',\n  name,\n  id,\n  value,\n  label,\n}: Props) => {\n  return (\n    <div>\n      <label htmlFor={id} className=\"text-blue-600 font-semibold\">\n        {label}\n      </label>\n      <div className={`flex items-center ${containerClassName} my-2`}>\n        <select className={`${className} appearance-none`} id={id} name={name} onChange={onChange} value={value || ''}>\n          {options.map(option => (\n            <option key={option.name} value={option.value}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n        <svg\n          className=\"w-4 h-4 fill-current text-gray-400 -ml-7 mt-1 pointer-events-none\"\n          viewBox=\"0 0 140 140\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g>\n            <path d=\"m121.3,34.6c-1.6-1.6-4.2-1.6-5.8,0l-51,51.1-51.1-51.1c-1.6-1.6-4.2-1.6-5.8,0-1.6,1.6-1.6,4.2 0,5.8l53.9,53.9c0.8,0.8 1.8,1.2 2.9,1.2 1,0 2.1-0.4 2.9-1.2l53.9-53.9c1.7-1.6 1.7-4.2 0.1-5.8z\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  )\n}\n", "import { User, Kudo } from '@prisma/client'\nimport { UserCircle } from './UserCircle'\nimport { EmojiMap } from '~/utils/constants'\n\ninterface KudoWithRecipient extends Kudo {\n  recipient: User\n}\n\nexport function RecentBar({ kudos }: { kudos: KudoWithRecipient[] }) {\n  return (\n    <div className=\"w-1/5 border-l-4 border-l-yellow-300 flex flex-col items-center\">\n      <h2 className=\"text-xl text-yellow-300 font-semibold my-6\">Recent Kudos</h2>\n      <div className=\"h-full flex flex-col gap-y-10 mt-10\">\n        {kudos.map(kudo => (\n          <div className=\"h-24 w-24 relative\" key={kudo.recipient.id}>\n            <UserCircle profile={kudo.recipient.profile} className=\"w-20 h-20\" />\n            <div className=\"h-8 w-8 text-3xl bottom-2 right-4 rounded-full absolute flex justify-center items-center\">\n              {EmojiMap[kudo?.style?.emoji || 'THUMBSUP']}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n", "import { json, LoaderFunction } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { redirect } from '@remix-run/node';\nimport { getUserById } from '~/utils/users.server';\nimport { Modal } from '~/components/Modal';\nimport { getUser, requireUserId } from '~/utils/auth.server';\nimport { useActionData } from '@remix-run/react';\nimport React, { useState } from 'react';\nimport { Color, Emoji, KudoStyle } from '@prisma/client';\nimport { UserCircle } from '~/components/UserCircle';\nimport { ColorMap, EmojiMap } from '~/utils/constants';\nimport { SelectBox } from '~/components/SelectBox';\nimport { Kudo } from './kudo';\nimport { ActionFunction } from '@remix-run/node';\nimport { createKudo } from '~/utils/kudos.serve';\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request)\n  const form = await request.formData()\n  const message = form.get('message')\n  const backgroundColor = form.get('backgroundColor')\n  const textColor = form.get('textColor')\n  const emoji = form.get('emoji')\n  const recipientId = form.get('recipientId')\n\n  if (\n    typeof message !== 'string' ||\n    typeof recipientId !== 'string' ||\n    typeof backgroundColor !== 'string' ||\n    typeof textColor !== 'string' ||\n    typeof emoji !== 'string'\n  ) {\n    return json({ error: `Invalid Form Data` }, { status: 400 })\n  }\n  if (!message.length) {\n    return json({ error: `Please provide a message.` }, { status: 400 })\n  }\n  if (!recipientId.length) {\n    return json({ error: `No recipient found...` }, { status: 400 })\n  }\n\n  await createKudo(message, userId, recipientId, {\n    backgroundColor: backgroundColor as Color,\n    textColor: textColor as Color,\n    emoji: emoji as Emoji,\n  })\n\n  return redirect('/home')\n}\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { userId } = params\n  if (typeof userId !== 'string') {\n    return redirect('/home')\n  }\n  const recipient = await getUserById(userId)\n  const user = await getUser(request)\n  return json({ recipient, user })\n}\n\nexport default function KudoModal() {\n  const actionData = useActionData()\n  const { recipient, user } = useLoaderData()\n  console.log({user})\n  const [formError] = useState(actionData?.error || '')\n  const [formData, setFormData] = useState({\n    message: '',\n    style: {\n      backgroundColor: 'RED',\n      textColor: 'WHITE',\n      emoji: 'THUMBSUP'\n    } as KudoStyle\n  })\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, field: string) => {\n    setFormData(data => ({ ...data, [field]: e.target.value }))\n  }\n  const handleStyleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, field: string) => {\n    setFormData(data => ({\n        ...data, style: {\n            ...data.style,\n            [field]: e.target.value\n        }\n    }))\n}\nconst getOptions = (data: any) => Object.keys(data).reduce((acc: any[], curr) => {\n  acc.push({\n    name: curr.charAt(0).toUpperCase() + curr.slice(1).toLowerCase(),\n    value: curr\n  })\n  return acc\n}, [])\nconst colors = getOptions(ColorMap)\nconst emojis = getOptions(EmojiMap)\n\n  return <Modal isOpen={true} className=\"w-2/3 p-10\">\n    <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">{formError}</div>\n      <form method=\"post\">\n        <input type=\"hidden\" value={recipient.id} name=\"recipientId\" />\n        <div className=\"flex flex-col md:flex-row gap-y-2 md:gap-y-0\">\n          <div className=\"text-center flex flex-col items-center gap-y-2 pr-8\">\n            <UserCircle profile={recipient.profile} className=\"h-24 w-24\" />\n            <p className=\"text-blue-300\">\n              {recipient.profile.firstName} {recipient.profile.lastName}\n            </p>\n            {recipient.profile.department && (\n              <span className=\"px-2 py-1 bg-gray-300 rounded-xl text-blue-300 w-auto\">\n                {recipient.profile.department[0].toUpperCase() + recipient.profile.department.toLowerCase().slice(1)}\n              </span>\n            )}\n          </div>\n          <div className=\"flex-1 flex flex-col gap-y-4\">\n            <textarea\n              name=\"message\"\n              className=\"w-full rounded-xl h-40 p-4\"\n              value={formData.message}\n              onChange={e => handleChange(e, 'message')}\n              placeholder={`Say something nice about ${recipient.profile.firstName}...`}\n            />\n            <div className=\"flex flex-col items-center md:flex-row md:justify-start gap-x-4\">\n              <SelectBox\n                options={colors}\n                name=\"backgroundColor\"\n                value={formData.style.backgroundColor}\n                onChange={e => handleStyleChange(e, 'backgroundColor')}\n                label=\"Background Color\"\n                containerClassName=\"w-36\"\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n                />\n              <SelectBox\n                options={colors}\n                name=\"textColor\"\n                value={formData.style.textColor}\n                onChange={e => handleStyleChange(e, 'textColor')}\n                label=\"Text Color\"\n                containerClassName=\"w-36\"\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n                />\n              <SelectBox\n                options={emojis}\n                name=\"emoji\"\n                value={formData.style.emoji}\n                onChange={e => handleStyleChange(e, 'emoji')}\n                label=\"Emoji\"\n                containerClassName=\"w-36\"\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n                />\n            </div>\n          </div>\n        </div>\n        <br />\n        <p className=\"text-blue-600 font-semibold mb-2\">Preview</p>\n        <div className=\"flex flex-col items-center md:flex-row gap-x-24 gap-y-2 md:gap-y-0\">\n          <Kudo profile={user.profile} kudo={formData} />\n          <div className=\"flex-1\" />\n          <button\n            type=\"submit\"\n            className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 w-80 h-12 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n          >\n            Send\n          </button>\n        </div>\n      </form>\n    </Modal>\n}\n", "\nimport { useNavigate } from '@remix-run/react';\nimport { Portal } from './Portal';\ninterface Props {\n  children: React.ReactNode\n  isOpen: boolean\n  ariaLabel?: string\n  className?: string\n}\nexport const Modal = ({children, isOpen, ariaLabel, className}: Props) => {\n  const navigate = useNavigate()\n  if(!isOpen) return null\n  return (\n    <Portal wrapperId=\"modal\">\n      <div\n        className=\"fixed inset-0 overflow-y-auto bg-gray-600 bg-opacity-80\"\n        aria-labelledby={ariaLabel ?? 'modal-title'}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        onClick={() => navigate('/home')}\n        ></div>\n        <div className=\"fixed inset-0 pointer-events-none flex justify-center items-center max-h-screen overflow-scroll\">\n          <div className={`${className} p-4 bg-gray-200 pointer-events-auto max-h-screen md:rounded-xl`}>\n            {children}\n          </div>\n        </div>\n    </Portal>\n  )\n}\n", "\n\nimport { createPortal } from 'react-dom'\nimport { useState, useEffect } from 'react'\n\ninterface props {\n  children: React.ReactNode\n  wrapperId: string\n}\n\n// generate a div with id\nconst createWrapper = (wrapperId: string) => {\n  const wrapper = document.createElement('div')\n  wrapper.setAttribute('id', wrapperId)\n  document.body.appendChild(wrapper)\n  return wrapper\n}\n\nexport const Portal: React.FC<props> = ({ children, wrapperId }) => {\n  const [wrapper, setWrapper] = useState<HTMLElement | null>(null)\n\n  useEffect(() => {\n    // check to see if element has been created, if not run createWrapper\n    let element = document.getElementById(wrapperId)\n    let created = false\n\n    if (!element) {\n      created = true\n      element = createWrapper(wrapperId)\n    }\n\n    setWrapper(element)\n\n    // Destroy element on unmount\n    return () => {\n      if (created && element?.parentNode) {\n        element.parentNode.removeChild(element)\n      }\n    }\n  }, [wrapperId])\n\n  if (wrapper === null) return null\n\n  // generate react portal\n  return createPortal(children, wrapper)\n}\n", "import {\n  ActionFunction,\n  json,\n  LoaderFunction,\n  redirect,\n} from \"@remix-run/node\";\nimport { useActionData, useLoaderData } from \"@remix-run/react\";\nimport { Modal } from \"~/components/Modal\";\nimport { getUser, logout, requireUserId } from \"~/utils/auth.server\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { FormField } from \"~/components/FormField\";\nimport { SelectBox } from \"~/components/SelectBox\";\nimport { departments } from \"~/utils/constants\";\nimport { validateName } from \"~/utils/validators.server\";\nimport { deleteUser, updateUser } from \"~/utils/users.server\";\nimport type { Department } from \"@prisma/client\";\nimport { ImageUploader } from \"~/components/ImageUploader\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const form = await request.formData();\n  // 1\n  let firstName = form.get(\"firstName\");\n  let lastName = form.get(\"lastName\");\n  let department = form.get(\"department\");\n  const action = form.get(\"_action\");\n\n  switch (action) {\n    case \"save\":\n      if (\n        typeof firstName !== \"string\" ||\n        typeof lastName !== \"string\" ||\n        typeof department !== \"string\"\n      ) {\n        return json({ error: `Invalid Form Data` }, { status: 400 });\n      }\n      const errors = {\n        firstName: validateName(firstName),\n        lastName: validateName(lastName),\n        department: validateName(department),\n      };\n      if (Object.values(errors).some(Boolean))\n        return json(\n          { errors, fields: { department, firstName, lastName } },\n          { status: 400 }\n        );\n      await updateUser(userId, {\n        firstName,\n        lastName,\n        department: department as Department,\n      });\n      return redirect(\"/home\");\n    case \"delete\":\n      await deleteUser(userId);\n      return logout(request);\n    default:\n      return json({ error: `Invalid Form Data` }, { status: 400 });\n  }\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const user = await getUser(request);\n  return json({ user });\n};\n\nexport default function ProfileSettings() {\n  const { user } = useLoaderData();\n  const actionData = useActionData();\n  const [formError, setFormError] = useState(actionData?.error || \"\");\n  const firstLoad = useRef(true);\n  const [formData, setFormData] = useState({\n    firstName: actionData?.fields?.firstName || user?.profile?.firstName,\n    lastName: actionData?.fields?.lastName || user?.profile?.lastName,\n    department:\n      actionData?.fields?.department ||\n      user?.profile?.department ||\n      \"MARKETING\",\n    profilePicture: user?.profile?.profilePicture || \"\",\n  });\n\n  useEffect(() => {\n    if (!firstLoad.current) {\n      setFormError(\"\");\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    firstLoad.current = false;\n  }, []);\n\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    setFormData((form) => ({ ...form, [field]: event.target.value }));\n  };\n\n  const handleFileUpload = async (file: File) => {\n    let inputFormData = new FormData();\n    inputFormData.append(\"profile-pic\", file);\n    const response = await fetch(\"/avatar\", {\n      method: \"POST\",\n      body: inputFormData,\n    });\n    const { imageUrl } = await response.json();\n    setFormData({\n      ...formData,\n      profilePicture: imageUrl,\n    });\n  };\n\n  return (\n    <Modal isOpen={true} className=\"w-1/3\">\n      <div className=\"p-3\">\n        <h2 className=\"text-4xl font-semibold text-blue-600 text-center mb-4\">\n          Your Profile\n        </h2>\n        <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">\n          {formError}\n        </div>\n        <div className=\"flex\">\n          <div className=\"w-1/3\">\n            <ImageUploader\n              onChange={handleFileUpload}\n              imageUrl={formData.profilePicture || \"\"}\n            />\n          </div>\n          <div className=\"flex-1\">\n            <form\n              method=\"post\"\n              onSubmit={(e) =>\n                !confirm(\"Are you sure?\") ? e.preventDefault() : true\n              }\n            >\n              <FormField\n                htmlFor=\"firstName\"\n                label=\"First Name\"\n                value={formData.firstName}\n                onChange={(e) => handleInputChange(e, \"firstName\")}\n                error={actionData?.errors?.firstName}\n              />\n              <FormField\n                htmlFor=\"lastName\"\n                label=\"Last Name\"\n                value={formData.lastName}\n                onChange={(e) => handleInputChange(e, \"lastName\")}\n                error={actionData?.errors?.lastName}\n              />\n              <SelectBox\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n                id=\"department\"\n                label=\"Department\"\n                name=\"department\"\n                options={departments}\n                value={formData.department}\n                onChange={(e) => handleInputChange(e, \"department\")}\n              />\n              <button\n                name=\"_action\"\n                value=\"delete\"\n                className=\"rounded-xl w-full bg-red-300 font-semibold text-white mt-4 px-16 py-2 transition duration-300 ease-in-out hover:bg-red-400 hover:-translate-y-1\"\n              >\n                Delete Account\n              </button>\n              <div className=\"w-full text-right mt-4\">\n                <button\n                  className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-16 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\"\n                  name=\"_action\"\n                  value=\"save\"\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n", "// app/components/image-uploader.tsx\n\nimport React, { useRef, useState } from \"react\";\n\ninterface props {\n    onChange: (file: File) => any,\n    imageUrl?: string\n}\n\nexport const ImageUploader = ({ onChange, imageUrl }: props) => {\n    const [draggingOver, setDraggingOver] = useState(false)\n    const fileInputRef = useRef<HTMLInputElement | null>(null)\n    const dropRef = useRef(null)\n\n    // 1\n    const preventDefaults = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault()\n        e.stopPropagation()\n    }\n\n    // 2\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        preventDefaults(e)\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n            onChange(e.dataTransfer.files[0])\n            e.dataTransfer.clearData()\n        }\n    }\n\n    // 3\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.currentTarget.files && event.currentTarget.files[0]) {\n            onChange(event.currentTarget.files[0])\n        }\n    }\n\n    // 4\n    return (\n        <div ref={dropRef}\n            className={`${draggingOver ? 'border-4 border-dashed border-yellow-300 border-rounded' : ''} group rounded-full relative w-24 h-24 flex justify-center items-center bg-gray-400 transition duration-300 ease-in-out hover:bg-gray-500 cursor-pointer`}\n            style={{\n                backgroundSize: \"cover\",\n                ...(imageUrl ? { backgroundImage: `url(${imageUrl})` } : {}),\n            }}\n            onDragEnter={() => setDraggingOver(true)}\n            onDragLeave={() => setDraggingOver(false)}\n            onDrag={preventDefaults}\n            onDragStart={preventDefaults}\n            onDragEnd={preventDefaults}\n            onDragOver={preventDefaults}\n            onDrop={handleDrop}\n            onClick={() => fileInputRef.current?.click()}\n        >\n            {\n                imageUrl &&\n                <div className=\"absolute w-full h-full bg-blue-400 opacity-50 rounded-full transition duration-300 ease-in-out group-hover:opacity-0\" />\n            }\n            {\n                <p className=\"font-extrabold text-4xl text-gray-200 cursor-pointer select-none transition duration-300 ease-in-out group-hover:opacity-0 pointer-events-none z-10\">+</p>\n            }\n            <input type=\"file\" ref={fileInputRef} onChange={handleChange} className=\"hidden\" />\n        </div>\n    )\n}\n", "import { UserCircle } from '~/components/UserCircle'\nimport { Profile, Kudo as IKudo } from '@prisma/client'\nimport { ColorMap, BackgroundColorMap, EmojiMap } from '~/utils/constants'\n\nexport function Kudo({ profile, kudo }: { profile: Profile; kudo: Partial<IKudo> }) {\n  console.log({profile})\n  console.log(ColorMap[kudo.style?.textColor || 'WHITE'])\n\n  return (\n    <div\n      className={`flex ${\n        BackgroundColorMap[kudo.style?.backgroundColor || 'RED']\n      } p-4 rounded-xl w-full gap-x-2 relative`}\n    >\n      <div>\n        <UserCircle profile={profile} className=\"h-16 w-16\" />\n      </div>\n      <div className=\"flex flex-col\">\n        <p className={`${ColorMap[kudo.style?.textColor || 'WHITE']} font-bold text-lg whitespace-pre-wrap break-all`}>\n          {profile?.firstName} {profile?.lastName}\n        </p>\n        <p className={`${ColorMap[kudo.style?.textColor || 'WHITE']} whitespace-pre-wrap break-all`}>{kudo.message}</p>\n      </div>\n      <div className=\"absolute bottom-4 right-4 bg-white rounded-full h-10 w-10 flex items-center justify-center text-2xl\">\n        {EmojiMap[kudo.style?.emoji || 'THUMBSUP']}\n      </div>\n    </div>\n  )\n}\n", "export default {'version':'53b3c230','entry':{'module':'/build/entry.client-RAYDXJ5U.js','imports':['/build/_shared/chunk-RUFXSJRN.js','/build/_shared/chunk-KJCNAXHM.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-6XXEV3V4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/avatar':{'id':'routes/avatar','parentId':'root','path':'avatar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/avatar-FG3RQ3V4.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home':{'id':'routes/home','parentId':'root','path':'home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home-EHD6WK7R.js','imports':['/build/_shared/chunk-JQHRLNXR.js','/build/_shared/chunk-ZXEUWYGM.js','/build/_shared/chunk-CD3WC3D2.js','/build/_shared/chunk-NXDGLDYE.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/kudo':{'id':'routes/home/kudo','parentId':'routes/home','path':'kudo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/kudo-5STPEWRM.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/kudo.$userId':{'id':'routes/home/kudo.$userId','parentId':'routes/home','path':'kudo/:userId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/kudo.$userId-67B3ZHFU.js','imports':['/build/_shared/chunk-FIAEUCCY.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/profile':{'id':'routes/home/profile','parentId':'routes/home','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/profile-TFPDFBLG.js','imports':['/build/_shared/chunk-ZTM4CEKQ.js','/build/_shared/chunk-FIAEUCCY.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-XOABYSLC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-E2SJKQHX.js','imports':['/build/_shared/chunk-ZTM4CEKQ.js','/build/_shared/chunk-JQHRLNXR.js','/build/_shared/chunk-NXDGLDYE.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-AMV4NR26.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-53B3C230.js'};", "\nimport * as entryServer from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/entry.server.tsx\";\nimport * as route0 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/root.tsx\";\nimport * as route1 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/avatar.tsx\";\nimport * as route2 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/logout.ts\";\nimport * as route3 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/index.ts\";\nimport * as route4 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/login.tsx\";\nimport * as route5 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home.tsx\";\nimport * as route6 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home/kudo.$userId.tsx\";\nimport * as route7 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home/profile.tsx\";\nimport * as route8 from \"/Users/pedroreyes/Documents/DayOnes/kudos/app/routes/home/kudo.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/avatar\": {\n      id: \"routes/avatar\",\n      parentId: \"root\",\n      path: \"avatar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/home\": {\n      id: \"routes/home\",\n      parentId: \"root\",\n      path: \"home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/home/kudo.$userId\": {\n      id: \"routes/home/kudo.$userId\",\n      parentId: \"routes/home\",\n      path: \"kudo/:userId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/home/profile\": {\n      id: \"routes/home/profile\",\n      parentId: \"routes/home\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/home/kudo\": {\n      id: \"routes/home/kudo\",\n      parentId: \"routes/home\",\n      path: \"kudo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,YAAuB;;;ACDvB;AAAA;AAAA;AAAA;AACA,mBAA4B;AAC5B,oBAA+B;AAEhB,uBACb,SACA,oBACA,iBACA,cACA;AACA,MAAI,SAAS,kCACX,oCAAC,0BAAD;AAAA,IAAa,SAAS;AAAA,IAAc,KAAK,QAAQ;AAAA;AAGnD,kBAAgB,IAAI,gBAAgB;AAEpC,SAAO,IAAI,SAAS,oBAAoB,QAAQ;AAAA,IAC9C,QAAQ;AAAA,IACR,SAAS;AAAA;AAAA;;;AClBb;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAOO;;;;;;AAGA,IAAM,OAAqB,MAAO;AAAA,EACvC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGL,IAAM,QAAuB,MAAM;AACxC,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGtB,eAAe;AAC5B,SACE,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACT,oCAAC,QAAD,MACE,oCAAC,oBAAD,OACA,oCAAC,qBAAD,QAEF,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,iCAAD,OACA,oCAAC,uBAAD,OACA,oCAAC,0BAAD;AAAA;;;AChCR;AAAA;AAAA;AAAA;AACA,mBAAqC;;;ACDrC,oBAA6B;AAE7B,IAAI;AAKJ,IAAI,OAAuC;AACzC,WAAS,IAAI;AACb,SAAO;AAAA,OACF;AAEL,MAAI,CAAC,OAAO,MAAM;AAChB,WAAO,OAAO,IAAI;AAClB,WAAO,KAAK;AAAA;AAEd,WAAS,OAAO;AAAA;;;ACdlB,kBAA2D;;;ACD3D,sBAAmB;AAIZ,IAAM,aAAa,OAAO,SAAuB;AACtD,QAAM,eAAe,MAAM,wBAAO,KAAK,KAAK,UAAU;AACtD,QAAM,UAAU,MAAM,OAAO,KAAK,OAAO;AAAA,IACvC,MAAM;AAAA,MACJ,OAAO,KAAK;AAAA,MACZ,UAAU;AAAA,MACV,SAAS;AAAA,QACP,WAAW,KAAK;AAAA,QAChB,UAAU,KAAK;AAAA;AAAA;AAAA;AAIrB,SAAO,EAAE,IAAI,QAAQ,IAAI,OAAO,KAAK;AAAA;AAGhC,IAAM,aAAa,OAAO,QAAgB,YAA8B;AAC7E,QAAM,OAAO,KAAK,OAAO;AAAA,IACvB,OAAO;AAAA,MACL,IAAI;AAAA;AAAA,IAEN,MAAM;AAAA,MACJ,SAAS;AAAA,QACP,QAAQ;AAAA;AAAA;AAAA;AAAA;AAMT,IAAM,aAAa,OAAO,OAAc;AAC7C,QAAM,OAAO,KAAK,OAAO,EAAC,OAAO,EAAC;AAAA;AAG7B,IAAM,gBAAgB,OAAO,WAAmB;AACrD,SAAO,MAAM,OAAO,KAAK,SAAS;AAAA,IAChC,OAAO,EAAE,IAAI,EAAE,KAAK;AAAA,IACpB,SAAS,EAAE,SAAS,EAAE,WAAW;AAAA;AAAA;AAI9B,IAAM,cAAc,OAAO,WAAmB;AACnD,SAAO,MAAM,OAAO,KAAK,WAAW,EAAC,OAAO,EAAC,IAAI;AAAA;;;ADzCnD,uBAAmB;AAEnB,IAAM,gBAAgB,QAAQ,IAAI;AAClC,IAAI,CAAC,eAAe;AAClB,QAAM,IAAI,MAAM;AAAA;AAElB,IAAM,UAAU,4CAA2B;AAAA,EACzC,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAC;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ,KAAK,KAAK,KAAK;AAAA,IACvB,UAAU;AAAA;AAAA;AAId,wBAA+B,MAAoB;AACjD,QAAM,SAAS,MAAM,OAAO,KAAK,MAAM,EAAE,OAAO,EAAE,OAAO,KAAK;AAC9D,MAAI,QAAQ;AACV,WAAO,sBAAK,EAAE,OAAO,yCAAyC,EAAE,QAAQ;AAAA;AAG1E,QAAM,UAAU,MAAM,WAAW;AACjC,MAAI,CAAC,SAAS;AACZ,WAAO,sBAAK;AAAA,MACV,OAAO;AAAA,MACP,QAAQ,EAAC,OAAO,KAAK,OAAO,UAAU,KAAK;AAAA,OAC1C;AAAA,MACD,QAAQ;AAAA;AAAA;AAGZ,SAAO,kBAAkB,QAAQ,IAAI;AAAA;AAGvC,qBAA4B,EAAE,OAAO,YAAuB;AAC1D,QAAM,OAAO,MAAM,OAAO,KAAK,WAAW,EAAE,OAAO,EAAC;AAEpD,MAAI,CAAC,QAAQ,CAAE,MAAM,yBAAO,QAAQ,UAAU,KAAK,WAAY;AAC7D,WAAO,sBAAK,EAAC,OAAO,qBAAoB,EAAC,QAAQ;AAAA;AAEnD,SAAO,kBAAkB,KAAK,IAAI;AAAA;AAGpC,iCAAwC,QAAe,YAAoB;AACzE,QAAM,UAAU,MAAM,QAAQ;AAC9B,UAAQ,IAAI,UAAU;AACtB,SAAO,0BAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,cAAc;AAAA;AAAA;AAAA;AAKhD,6BAAoC,SAAkB,aAAqB,IAAI,IAAI,QAAQ,KAAK,UAAU;AACxG,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACzC,UAAM,eAAe,IAAI,gBAAgB,CAAC,CAAC,cAAc;AACzD,UAAM,0BAAS,UAAU;AAAA;AAE3B,SAAO;AAAA;AAGT,wBAAwB,SAAkB;AACxC,SAAO,QAAQ,WAAW,QAAQ,QAAQ,IAAI;AAAA;AAGhD,yBAAyB,SAAkB;AACzC,QAAM,UAAU,MAAM,eAAe;AACrC,QAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC,UAAU,OAAO,WAAW;AAAU,WAAO;AAClD,SAAO;AAAA;AAGT,uBAA8B,SAAkB;AAC9C,QAAM,SAAS,MAAM,UAAU;AAC/B,MAAI,OAAO,WAAW,UAAU;AAC9B,WAAO;AAAA;AAGT,MAAI;AACF,UAAM,OAAO,MAAM,OAAO,KAAK,WAAW;AAAA,MACxC,OAAO,EAAC,IAAI;AAAA,MACZ,QAAQ,EAAC,IAAI,MAAM,OAAO,MAAM,SAAS;AAAA;AAE3C,WAAO;AAAA,UACP;AACA,UAAM,OAAO;AAAA;AAAA;AAIjB,sBAA6B,SAAiB;AAC5C,QAAM,UAAU,MAAM,eAAe;AACrC,SAAO,0BAAS,UAAU;AAAA,IACxB,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,eAAe;AAAA;AAAA;AAAA;;;AErGjD,mBAGO;AACP,gBAAe;AACf,kBAAiB;AAGjB,IAAM,KAAK,IAAI,kBAAG;AAAA,EAChB,QAAQ,QAAQ,IAAI;AAAA,EACpB,aAAa,QAAQ,IAAI;AAAA,EACzB,iBAAiB,QAAQ,IAAI;AAAA;AAGxB,IAAM,gBAA+B,OAAO,EAAC,MAAM,UAAU,aAAY;AAC9E,MAAI,SAAS,eAAe;AAC1B,WAAO;AACP;AAAA;AAEF,QAAM,EAAE,aAAa,MAAM,GAAG,OAAO;AAAA,IACnC,QAAQ,QAAQ,IAAI,qBAAqB;AAAA,IACzC,KAAK,GAAG,8BAAU,SAAS,MAAM,KAAK,MAAM;AAAA,IAC5C,MAAM;AAAA,KACL;AACH,SAAO;AAAA;AAGF,IAAM,eAAe,OAAO,YAAqB;AA3BxD;AA4BE,QAAM,WAAW,MAAM,kDAAgC,SAAS;AAChE,QAAM,OAAO,gBAAS,IAAI,mBAAb,mBAA6B,eAAc;AACxD,SAAO;AAAA;;;AJxBF,IAAM,SAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,MAAM,cAAc;AACnC,QAAM,WAAW,MAAM,aAAa;AAEpC,QAAM,OAAO,KAAK,OAAO;AAAA,IACvB,MAAM;AAAA,MACJ,SAAS;AAAA,QACP,QAAQ;AAAA,UACN,gBAAgB;AAAA;AAAA;AAAA;AAAA,IAItB,OAAO;AAAA,MACL,IAAI;AAAA;AAAA;AAIR,SAAO,uBAAK,EAAE;AAAA;;;AKvBhB;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyD;AAGlD,IAAM,UAAyB,OAAO,EAAC,cAAa,OAAO;AAC3D,IAAM,SAAyB,YAAY,2BAAS;;;ACJ3D;AAAA;AAAA;AAAA;AAAA,mBAAyC;AAIlC,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,cAAc;AACpB,SAAO,2BAAS;AAAA;;;ACNlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKO;AACP,oBAA8B;AAC9B,oBAA4C;;;ACP5C,oBAAoC;AAW7B,mBAAmB,EAAE,SAAS,OAAO,OAAO,QAAQ,OAAO,WAAW,MAAM;AAAA,GAAI,QAAQ,MAAqB;AAClH,QAAM,CAAC,WAAW,gBAAgB,4BAAS;AAC3C,+BAAU,MAAM;AACd,iBAAa;AAAA,KACZ,CAAC;AAEJ,SACE,0DACE,oCAAC,SAAD;AAAA,IAAO;AAAA,IAAkB,WAAU;AAAA,KAChC,QAEH,oCAAC,SAAD;AAAA,IACE,UAAU,CAAC,MAAM;AACf,eAAS;AACT,mBAAa;AAAA;AAAA,IAEf;AAAA,IACA,MAAM;AAAA,IACN,WAAU;AAAA,IACV;AAAA,MAEF,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACR,aAAa;AAAA;;;ACjCnB,gBAAgB,EAAE,YAA2C;AAClE,SAAO,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAAyC;AAAA;;;ACD1D,IAAM,gBAAgB,CAAC,UAAsC;AAClE,MAAI,aAAa;AACjB,MAAI,CAAC,MAAM,UAAU,CAAC,WAAW,KAAK,QAAQ;AAC5C,WAAO;AAAA;AAAA;AAIJ,IAAM,mBAAmB,CAAC,aAAyC;AACxE,MAAI,SAAS,SAAS,GAAG;AACvB,WAAO;AAAA;AAAA;AAIJ,IAAM,eAAe,CAAC,SAAqC;AAChE,MAAI,CAAC,KAAK;AAAQ,WAAO;AAAA;;;AHGpB,IAAM,UAAyB,OAAO,EAAE,cAAc;AAE3D,SAAQ,MAAM,QAAQ,WAAY,2BAAS,OAAO;AAAA;AAG7C,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,UAAS,KAAK,IAAI;AACxB,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,WAAW,KAAK,IAAI;AAC1B,MAAI,YAAY,KAAK,IAAI;AACzB,MAAI,WAAW,KAAK,IAAI;AAExB,MACE,OAAO,YAAW,YAClB,OAAO,UAAU,YACjB,OAAO,aAAa,UACpB;AACA,WAAO,uBAAK,EAAE,OAAO,qBAAqB,MAAM,WAAU,EAAE,QAAQ;AAAA;AAGtE,MACE,YAAW,cACV,QAAO,cAAc,YAAY,OAAO,aAAa,WACtD;AACA,WAAO,uBAAK,EAAE,OAAO,qBAAqB,MAAM,WAAU,EAAE,QAAQ;AAAA;AAGtE,QAAM,SAAS;AAAA,IACb,OAAO,cAAc;AAAA,IACrB,UAAU,iBAAiB;AAAA,KACvB,YAAW,aACX;AAAA,IACE,WAAW,aAAc,aAAwB;AAAA,IACjD,UAAU,aAAc,YAAuB;AAAA,MAEjD;AAGN,MAAI,OAAO,OAAO,QAAQ,KAAK,UAAU;AACvC,WAAO,uBACL;AAAA,MACE;AAAA,MACA,QAAQ,EAAE,OAAO,UAAU,WAAW;AAAA,MACtC,MAAM;AAAA,OAER,EAAE,QAAQ;AAAA;AAId,UAAQ;AAAA,SACD,SAAS;AACZ,aAAO,MAAM,MAAM,EAAE,OAAO;AAAA;AAAA,SAEzB,YAAY;AACf,kBAAY;AACZ,iBAAW;AACX,aAAO,MAAM,SAAS,EAAE,OAAO,UAAU,WAAW;AAAA;AAAA;AAGpD,aAAO,uBAAK,EAAE,OAAO,uBAAuB,EAAE,QAAQ;AAAA;AAAA;AAI7C,iBAAiB;AAjFhC;AAkFE,QAAM,CAAC,SAAQ,aAAa,4BAAS;AACrC,QAAM,aAAa;AACnB,QAAM,YAAY,0BAAO;AACzB,QAAM,CAAC,QAAQ,aAAa,4BAAS,0CAAY,WAAU;AAC3D,QAAM,CAAC,WAAW,gBAAgB,4BAAS,0CAAY,UAAS;AAChE,QAAM,CAAC,UAAU,eAAe,4BAAS;AAAA,IACvC,OAAO,gDAAY,WAAZ,mBAAoB,UAAS;AAAA,IACpC,UAAU,gDAAY,WAAZ,mBAAoB,aAAY;AAAA,IAC1C,WAAW,gDAAY,WAAZ,mBAAoB,aAAY;AAAA,IAC3C,UAAU,gDAAY,WAAZ,mBAAoB,cAAa;AAAA;AAG7C,+BAAU,MAAM;AACd,QAAI,CAAC,UAAU,SAAS;AACtB,YAAM,WAAW;AAAA,QACf,OAAO;AAAA,QACP,UAAU;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA;AAEZ,gBAAU;AACV,mBAAa;AACb,kBAAY;AAAA;AAAA,KAEb,CAAC;AAEJ,+BAAU,MAAM;AACd,QAAI,CAAC,UAAU,SAAS;AACtB,mBAAa;AAAA;AAAA,KAEd,CAAC;AAEJ,+BAAU,MAAM;AACd,cAAU,UAAU;AAAA,KACnB;AAEH,QAAM,oBAAoB,CACxB,OACA,UACG;AACH,gBAAY,CAAC,SAAU,iCAAK,OAAL,GAAY,QAAQ,MAAM,OAAO;AAAA;AAE1D,SACE,oCAAC,QAAD,MACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,SAAS,MAAM,UAAU,WAAU,UAAU,aAAa;AAAA,IAC1D,WAAU;AAAA,KAET,YAAW,UAAU,YAAY,YAEpC,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA0C,sBAGxD,oCAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,YAAW,UACR,gCACA,4BAGN,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,KAC5B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,YAGH,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEjB,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,MAAK;AAAA,IACL,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEhB,YAAW,cACV,0DACE,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,MAEjB,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,iCAAQ;AAAA,OAKrB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAEb,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,OAAO;AAAA,IACP,WAAU;AAAA,KAET,YAAW,UAAU,YAAY;AAAA;;;AI7LhD;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqC;AACrC,oBAAsC;;;ACAtC,oBAA4B;;;ACMrB,IAAM,aAAa,CAAC,EAAE,SAAS,SAAS,gBAAsB;AACnE,SACE,oCAAC,OAAD;AAAA,IACE,WAAW,GAAG;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACL,gBAAgB;AAAA,OACZ,QAAQ,iBAAiB,EAAE,iBAAiB,OAAO,QAAQ,sBAAsB;AAAA,KAIlF,CAAC,QAAQ,kBACN,oCAAC,MAAD,MAAK,QAAQ,UAAU,OAAO,GAAG,eAAe,QAAQ,SAAS,OAAO,GAAG;AAAA;;;ADflF,mBAAmB,EAAE,SAA4B;AACtD,QAAM,WAAW;AACjB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAsC,aAEtD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,MAAM,IAAI,UACT,oCAAC,YAAD;AAAA,IACE,KAAK,KAAK;AAAA,IACV,SAAS,KAAK;AAAA,IACd,WAAU;AAAA,IACV,SAAS,MAAM,SAAS,cAAc,KAAK;AAAA,QAGjD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IAAM,QAAO;AAAA,IAAU,QAAO;AAAA,KAC9B,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KACX;AAAA;;;AErBF,IAAM,aAAa,OAAO,SAAiB,QAAgB,aAAqB,UAAqB;AAC1G,QAAM,OAAO,KAAK,OAAO;AAAA,IACvB,MAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,QACN,SAAS;AAAA,UACP,IAAI;AAAA;AAAA;AAAA,MAGR,WAAW;AAAA,QACT,SAAS;AAAA,UACP,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,IAAM,mBAAmB,OAC9B,QACA,YACA,gBACG;AACH,SAAO,MAAM,OAAO,KAAK,SAAS;AAAA,IAChC,QAAQ;AAAA,MACN,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,QACN,QAAQ;AAAA,UACN,SAAS;AAAA;AAAA;AAAA;AAAA,IAIf,SAAS,mBACJ;AAAA,IAEL,OAAO;AAAA,MACL,aAAa;AAAA,OACV;AAAA;AAAA;AAKF,IAAM,iBAAiB,YAAY;AACxC,SAAO,MAAM,OAAO,KAAK,SAAS;AAAA,IAChC,MAAM;AAAA,IACN,SAAS;AAAA,MACP,WAAW;AAAA;AAAA,IAEb,QAAQ;AAAA,MACN,OAAO;AAAA,QACL,QAAQ;AAAA,UACN,OAAO;AAAA;AAAA;AAAA,MAGX,WAAW;AAAA,QACT,QAAQ;AAAA,UACN,IAAI;AAAA,UACJ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;;;AChEZ,IAAK,WAAL,kBAAK,cAAL;AACL,qBAAM;AACN,uBAAQ;AACR,sBAAO;AACP,uBAAQ;AACR,wBAAS;AALC;AAAA;AAQL,IAAK,qBAAL,kBAAK,wBAAL;AACL,+BAAM;AACN,iCAAQ;AACR,gCAAO;AACP,iCAAQ;AACR,kCAAS;AALC;AAAA;AAQL,IAAK,WAAL,kBAAK,cAAL;AACL,0BAAW;AACX,uBAAQ;AACR,yBAAU;AAHA;AAAA;AAML,IAAM,cAAc;AAAA,EACzB;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA;AAAA,EAET;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA;AAAA,EAET;AAAA,IACE,MAAM;AAAA,IACN,OAAO;AAAA;AAAA;AAIJ,IAAM,cAAc;AAAA,EACzB,EAAE,MAAM,MAAM,OAAO;AAAA,EACrB,EAAE,MAAM,eAAe,OAAO;AAAA,EAC9B,EAAE,MAAM,SAAS,OAAO;AAAA,EACxB,EAAE,MAAM,aAAa,OAAO;AAAA;;;ACrCvB,cAAc,EAAE,SAAS,QAAoD;AAJpF;AAKE,UAAQ,IAAI,EAAC;AACb,UAAQ,IAAI,SAAS,YAAK,UAAL,mBAAY,cAAa;AAE9C,SACE,oCAAC,OAAD;AAAA,IACE,WAAW,QACT,mBAAmB,YAAK,UAAL,mBAAY,oBAAmB;AAAA,KAGpD,oCAAC,OAAD,MACE,oCAAC,YAAD;AAAA,IAAY;AAAA,IAAkB,WAAU;AAAA,OAE1C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAW,GAAG,SAAS,YAAK,UAAL,mBAAY,cAAa;AAAA,KAChD,mCAAS,WAAU,KAAE,mCAAS,WAEjC,oCAAC,KAAD;AAAA,IAAG,WAAW,GAAG,SAAS,YAAK,UAAL,mBAAY,cAAa;AAAA,KAA2C,KAAK,WAErG,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,SAAS,YAAK,UAAL,mBAAY,UAAS;AAAA;;;ACxBvC,oBAA6C;AAC7C,oBAAyB;;;ACclB,IAAM,YAAY,CAAC;AAAA,EACxB,UAAU;AAAA,EACV,WAAW,MAAM;AAAA;AAAA,EACjB,YAAY;AAAA,EACZ,qBAAqB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,MACW;AACX,SACE,oCAAC,OAAD,MACE,oCAAC,SAAD;AAAA,IAAO,SAAS;AAAA,IAAI,WAAU;AAAA,KAC3B,QAEH,oCAAC,OAAD;AAAA,IAAK,WAAW,qBAAqB;AAAA,KACnC,oCAAC,UAAD;AAAA,IAAQ,WAAW,GAAG;AAAA,IAA6B;AAAA,IAAQ;AAAA,IAAY;AAAA,IAAoB,OAAO,SAAS;AAAA,KACxG,QAAQ,IAAI,YACX,oCAAC,UAAD;AAAA,IAAQ,KAAK,OAAO;AAAA,IAAM,OAAO,OAAO;AAAA,KACrC,OAAO,SAId,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,SAAQ;AAAA,IACR,OAAM;AAAA,KAEN,oCAAC,KAAD,MACE,oCAAC,QAAD;AAAA,IAAM,GAAE;AAAA;AAAA;;;ADlCb,IAAM,YAAY,CAAC,EAAE,cAAqB;AAC/C,QAAM,WAAW;AACjB,MAAI,CAAC,gBAAgB;AACrB,QAAM,CAAC,MAAM,WAAW,4BAAS;AAEjC,QAAM,eAAe,MAAM;AACzB,iBAAa,OAAO;AACpB,iBAAa,OAAO;AACpB,aAAS;AAAA;AAGX,QAAM,mBAAmB,CACvB,MACG;AACH,YAAQ,EAAE,OAAO;AAAA;AAGnB,SACE,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,OAAD;AAAA,IAAK,WAAW;AAAA,KACd,oCAAC,SAAD;AAAA,IACE,MAAK;AAAA,IACL,MAAK;AAAA,IACL,WAAU;AAAA,IACV,aAAY;AAAA,MAEd,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,OAAM;AAAA,IACN,SAAQ;AAAA,KAER,oCAAC,QAAD;AAAA,IAAM,GAAE;AAAA,IAAkB,MAAK;AAAA,MAC/B,oCAAC,QAAD;AAAA,IAAM,GAAE;AAAA,QAGZ,oCAAC,WAAD;AAAA,IACE,WAAU;AAAA,IACV,oBAAmB;AAAA,IACnB,MAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,IACP,UAAU,CAAC,MAAM,iBAAiB;AAAA,MAEpC,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KACX,WAGA,aAAa,IAAI,aAChB,oCAAC,UAAD;AAAA,IACE,SAAS;AAAA,IACT,WAAU;AAAA,KACX,kBAIH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,oCAAC,YAAD;AAAA,IACE,WAAU;AAAA,IACV;AAAA,IACA,SAAS,MAAM,SAAS;AAAA;AAAA;;;AE/DzB,mBAAmB,EAAE,SAAyC;AACnE,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAA6C,iBAC3D,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,MAAM,IAAI,UAAK;AAbxB;AAcU,+CAAC,OAAD;AAAA,MAAK,WAAU;AAAA,MAAqB,KAAK,KAAK,UAAU;AAAA,OACtD,oCAAC,YAAD;AAAA,MAAY,SAAS,KAAK,UAAU;AAAA,MAAS,WAAU;AAAA,QACvD,oCAAC,OAAD;AAAA,MAAK,WAAU;AAAA,OACZ,SAAS,oCAAM,UAAN,mBAAa,UAAS;AAAA;AAAA;;;ARKvC,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,MAAM,cAAc;AACnC,QAAM,MAAM,IAAI,IAAI,QAAQ;AAC5B,QAAM,OAAO,IAAI,aAAa,IAAI;AAClC,QAAM,SAAS,IAAI,aAAa,IAAI;AACpC,MAAI,eAAmD;AACvD,MAAI,MAAM;AACR,QAAI,SAAS,QAAQ;AACnB,qBAAc,EAAE,WAAW;AAAA;AAE7B,QAAI,SAAS,UAAU;AACrB,qBAAc,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW;AAAA;AAElD,QAAI,SAAS,SAAS;AACpB,qBAAc,EAAE,OAAO,EAAE,OAAO;AAAA;AAAA;AAIpC,MAAI,aAAoC;AACxC,MAAI,QAAQ;AACV,iBAAa;AAAA,MACX,IAAI;AAAA,QACF,EAAE,SAAS,EAAE,MAAM,eAAe,UAAU;AAAA,QAC5C;AAAA,UACE,QAAQ;AAAA,YACN,IAAI;AAAA,cACF;AAAA,gBACE,SAAS;AAAA,kBACP,IAAI,EAAE,WAAW,EAAE,MAAM,eAAe,UAAU;AAAA;AAAA;AAAA,cAGtD;AAAA,gBACE,SAAS;AAAA,kBACP,IAAI,EAAE,UAAU,EAAE,MAAM,eAAe,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUjE,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,QAAQ,MAAM,cAAc;AAClC,QAAM,QAAQ,MAAM,iBAAiB,QAAQ,cAAa;AAC1D,QAAM,cAAc,MAAM;AAC1B,SAAO,uBAAK,EAAE,MAAM,OAAO,OAAO;AAAA;AAGrB,gBAAgB;AAC7B,QAAM,EAAE,MAAM,OAAO,OAAO,gBAAgB;AAC5C,SACE,oCAAC,QAAD,MACE,oCAAC,sBAAD,OACA,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,WAAD;AAAA,IAAW;AAAA,MACX,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,WAAD;AAAA,IAAW,SAAS,KAAK;AAAA,MACzB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,MAAM,IAAI,CAAC,SACV,oCAAC,MAAD;AAAA,IAAM,KAAK,KAAK;AAAA,IAAI;AAAA,IAAY,SAAS,KAAK,OAAO;AAAA,QAGzD,oCAAC,WAAD;AAAA,IAAW,OAAO;AAAA;AAAA;;;ASvF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqC;AACrC,qBAA8B;AAC9B,mBAAyB;;;ACDzB,qBAA4B;;;ACC5B,uBAA6B;AAC7B,qBAAoC;AAQpC,IAAM,gBAAgB,CAAC,cAAsB;AAC3C,QAAM,UAAU,SAAS,cAAc;AACvC,UAAQ,aAAa,MAAM;AAC3B,WAAS,KAAK,YAAY;AAC1B,SAAO;AAAA;AAGF,IAAM,SAA0B,CAAC,EAAE,UAAU,gBAAgB;AAClE,QAAM,CAAC,SAAS,cAAc,6BAA6B;AAE3D,gCAAU,MAAM;AAEd,QAAI,UAAU,SAAS,eAAe;AACtC,QAAI,UAAU;AAEd,QAAI,CAAC,SAAS;AACZ,gBAAU;AACV,gBAAU,cAAc;AAAA;AAG1B,eAAW;AAGX,WAAO,MAAM;AACX,UAAI,WAAW,oCAAS,aAAY;AAClC,gBAAQ,WAAW,YAAY;AAAA;AAAA;AAAA,KAGlC,CAAC;AAEJ,MAAI,YAAY;AAAM,WAAO;AAG7B,SAAO,mCAAa,UAAU;AAAA;;;ADnCzB,IAAM,QAAQ,CAAC,EAAC,UAAU,QAAQ,WAAW,gBAAsB;AACxE,QAAM,WAAW;AACjB,MAAG,CAAC;AAAQ,WAAO;AACnB,SACE,oCAAC,QAAD;AAAA,IAAQ,WAAU;AAAA,KAChB,oCAAC,OAAD;AAAA,IACE,WAAU;AAAA,IACV,mBAAiB,aAAa;AAAA,IAC9B,MAAK;AAAA,IACL,cAAW;AAAA,IACX,SAAS,MAAM,SAAS;AAAA,MAExB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAW,GAAG;AAAA,KAChB;AAAA;;;ADjBb,qBAA8B;AAC9B,qBAAgC;AASzB,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,MAAM,cAAc;AACnC,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,UAAU,KAAK,IAAI;AACzB,QAAM,kBAAkB,KAAK,IAAI;AACjC,QAAM,YAAY,KAAK,IAAI;AAC3B,QAAM,QAAQ,KAAK,IAAI;AACvB,QAAM,cAAc,KAAK,IAAI;AAE7B,MACE,OAAO,YAAY,YACnB,OAAO,gBAAgB,YACvB,OAAO,oBAAoB,YAC3B,OAAO,cAAc,YACrB,OAAO,UAAU,UACjB;AACA,WAAO,uBAAK,EAAE,OAAO,uBAAuB,EAAE,QAAQ;AAAA;AAExD,MAAI,CAAC,QAAQ,QAAQ;AACnB,WAAO,uBAAK,EAAE,OAAO,+BAA+B,EAAE,QAAQ;AAAA;AAEhE,MAAI,CAAC,YAAY,QAAQ;AACvB,WAAO,uBAAK,EAAE,OAAO,2BAA2B,EAAE,QAAQ;AAAA;AAG5D,QAAM,WAAW,SAAS,QAAQ,aAAa;AAAA,IAC7C;AAAA,IACA;AAAA,IACA;AAAA;AAGF,SAAO,2BAAS;AAAA;AAGX,IAAM,UAAyB,OAAO,EAAE,SAAS,aAAa;AACnE,QAAM,EAAE,WAAW;AACnB,MAAI,OAAO,WAAW,UAAU;AAC9B,WAAO,2BAAS;AAAA;AAElB,QAAM,YAAY,MAAM,YAAY;AACpC,QAAM,OAAO,MAAM,QAAQ;AAC3B,SAAO,uBAAK,EAAE,WAAW;AAAA;AAGZ,qBAAqB;AAClC,QAAM,aAAa;AACnB,QAAM,EAAE,WAAW,SAAS;AAC5B,UAAQ,IAAI,EAAC;AACb,QAAM,CAAC,aAAa,6BAAS,0CAAY,UAAS;AAClD,QAAM,CAAC,UAAU,eAAe,6BAAS;AAAA,IACvC,SAAS;AAAA,IACT,OAAO;AAAA,MACL,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,OAAO;AAAA;AAAA;AAGX,QAAM,eAAe,CAAC,GAA8D,UAAkB;AACpG,gBAAY,UAAS,iCAAK,OAAL,GAAY,QAAQ,EAAE,OAAO;AAAA;AAEpD,QAAM,oBAAoB,CAAC,GAA8D,UAAkB;AACzG,gBAAY,UAAS,iCACd,OADc;AAAA,MACR,OAAO,iCACT,KAAK,QADI;AAAA,SAEX,QAAQ,EAAE,OAAO;AAAA;AAAA;AAAA;AAI9B,QAAM,aAAa,CAAC,SAAc,OAAO,KAAK,MAAM,OAAO,CAAC,KAAY,SAAS;AAC/E,QAAI,KAAK;AAAA,MACP,MAAM,KAAK,OAAO,GAAG,gBAAgB,KAAK,MAAM,GAAG;AAAA,MACnD,OAAO;AAAA;AAET,WAAO;AAAA,KACN;AACH,QAAM,SAAS,WAAW;AAC1B,QAAM,SAAS,WAAW;AAExB,SAAO,qDAAC,OAAD;AAAA,IAAO,QAAQ;AAAA,IAAM,WAAU;AAAA,KACpC,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KAA4E,YACzF,qDAAC,QAAD;AAAA,IAAM,QAAO;AAAA,KACX,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,OAAO,UAAU;AAAA,IAAI,MAAK;AAAA,MAC/C,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,YAAD;AAAA,IAAY,SAAS,UAAU;AAAA,IAAS,WAAU;AAAA,MAClD,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KACV,UAAU,QAAQ,WAAU,KAAE,UAAU,QAAQ,WAElD,UAAU,QAAQ,cACjB,qDAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACb,UAAU,QAAQ,WAAW,GAAG,gBAAgB,UAAU,QAAQ,WAAW,cAAc,MAAM,MAIxG,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,YAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,IACV,OAAO,SAAS;AAAA,IAChB,UAAU,OAAK,aAAa,GAAG;AAAA,IAC/B,aAAa,4BAA4B,UAAU,QAAQ;AAAA,MAE7D,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,WAAD;AAAA,IACE,SAAS;AAAA,IACT,MAAK;AAAA,IACL,OAAO,SAAS,MAAM;AAAA,IACtB,UAAU,OAAK,kBAAkB,GAAG;AAAA,IACpC,OAAM;AAAA,IACN,oBAAmB;AAAA,IACnB,WAAU;AAAA,MAEZ,qDAAC,WAAD;AAAA,IACE,SAAS;AAAA,IACT,MAAK;AAAA,IACL,OAAO,SAAS,MAAM;AAAA,IACtB,UAAU,OAAK,kBAAkB,GAAG;AAAA,IACpC,OAAM;AAAA,IACN,oBAAmB;AAAA,IACnB,WAAU;AAAA,MAEZ,qDAAC,WAAD;AAAA,IACE,SAAS;AAAA,IACT,MAAK;AAAA,IACL,OAAO,SAAS,MAAM;AAAA,IACtB,UAAU,OAAK,kBAAkB,GAAG;AAAA,IACpC,OAAM;AAAA,IACN,oBAAmB;AAAA,IACnB,WAAU;AAAA,SAKlB,qDAAC,MAAD,OACA,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAmC,YAChD,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,qDAAC,MAAD;AAAA,IAAM,SAAS,KAAK;AAAA,IAAS,MAAM;AAAA,MACnC,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MACf,qDAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAU;AAAA,KACX;AAAA;;;AG7JX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKO;AACP,qBAA6C;AAG7C,qBAA4C;;;ACP5C,qBAAwC;AAOjC,IAAM,gBAAgB,CAAC,EAAE,UAAU,eAAsB;AAC5D,QAAM,CAAC,cAAc,mBAAmB,6BAAS;AACjD,QAAM,eAAe,2BAAgC;AACrD,QAAM,UAAU,2BAAO;AAGvB,QAAM,kBAAkB,CAAC,MAAuC;AAC5D,MAAE;AACF,MAAE;AAAA;AAIN,QAAM,aAAa,CAAC,MAAuC;AACvD,oBAAgB;AAChB,QAAI,EAAE,aAAa,SAAS,EAAE,aAAa,MAAM,IAAI;AACjD,eAAS,EAAE,aAAa,MAAM;AAC9B,QAAE,aAAa;AAAA;AAAA;AAKvB,QAAM,eAAe,CAAC,UAA+C;AACjE,QAAI,MAAM,cAAc,SAAS,MAAM,cAAc,MAAM,IAAI;AAC3D,eAAS,MAAM,cAAc,MAAM;AAAA;AAAA;AAK3C,SACI,qDAAC,OAAD;AAAA,IAAK,KAAK;AAAA,IACN,WAAW,GAAG,eAAe,4DAA4D;AAAA,IACzF,OAAO;AAAA,MACH,gBAAgB;AAAA,OACZ,WAAW,EAAE,iBAAiB,OAAO,gBAAgB;AAAA,IAE7D,aAAa,MAAM,gBAAgB;AAAA,IACnC,aAAa,MAAM,gBAAgB;AAAA,IACnC,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,SAAS,MAAG;AAnDxB;AAmD2B,gCAAa,YAAb,mBAAsB;AAAA;AAAA,KAGjC,YACA,qDAAC,OAAD;AAAA,IAAK,WAAU;AAAA,MAGf,qDAAC,KAAD;AAAA,IAAG,WAAU;AAAA,KAAsJ,MAEvK,qDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,KAAK;AAAA,IAAc,UAAU;AAAA,IAAc,WAAU;AAAA;AAAA;;;AD1C7E,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,SAAS,MAAM,cAAc;AACnC,QAAM,OAAO,MAAM,QAAQ;AAE3B,MAAI,YAAY,KAAK,IAAI;AACzB,MAAI,WAAW,KAAK,IAAI;AACxB,MAAI,aAAa,KAAK,IAAI;AAC1B,QAAM,UAAS,KAAK,IAAI;AAExB,UAAQ;AAAA,SACD;AACH,UACE,OAAO,cAAc,YACrB,OAAO,aAAa,YACpB,OAAO,eAAe,UACtB;AACA,eAAO,wBAAK,EAAE,OAAO,uBAAuB,EAAE,QAAQ;AAAA;AAExD,YAAM,SAAS;AAAA,QACb,WAAW,aAAa;AAAA,QACxB,UAAU,aAAa;AAAA,QACvB,YAAY,aAAa;AAAA;AAE3B,UAAI,OAAO,OAAO,QAAQ,KAAK;AAC7B,eAAO,wBACL,EAAE,QAAQ,QAAQ,EAAE,YAAY,WAAW,cAC3C,EAAE,QAAQ;AAEd,YAAM,WAAW,QAAQ;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA;AAEF,aAAO,4BAAS;AAAA,SACb;AACH,YAAM,WAAW;AACjB,aAAO,OAAO;AAAA;AAEd,aAAO,wBAAK,EAAE,OAAO,uBAAuB,EAAE,QAAQ;AAAA;AAAA;AAIrD,IAAM,UAAyB,OAAO,EAAE,cAAc;AAC3D,QAAM,OAAO,MAAM,QAAQ;AAC3B,SAAO,wBAAK,EAAE;AAAA;AAGD,2BAA2B;AAjE1C;AAkEE,QAAM,EAAE,SAAS;AACjB,QAAM,aAAa;AACnB,QAAM,CAAC,WAAW,gBAAgB,6BAAS,0CAAY,UAAS;AAChE,QAAM,YAAY,2BAAO;AACzB,QAAM,CAAC,UAAU,eAAe,6BAAS;AAAA,IACvC,WAAW,gDAAY,WAAZ,mBAAoB,cAAa,oCAAM,YAAN,mBAAe;AAAA,IAC3D,UAAU,gDAAY,WAAZ,mBAAoB,aAAY,oCAAM,YAAN,mBAAe;AAAA,IACzD,YACE,gDAAY,WAAZ,mBAAoB,eACpB,oCAAM,YAAN,mBAAe,eACf;AAAA,IACF,gBAAgB,oCAAM,YAAN,mBAAe,mBAAkB;AAAA;AAGnD,gCAAU,MAAM;AACd,QAAI,CAAC,UAAU,SAAS;AACtB,mBAAa;AAAA;AAAA,KAEd,CAAC;AAEJ,gCAAU,MAAM;AACd,cAAU,UAAU;AAAA,KACnB;AAEH,QAAM,oBAAoB,CACxB,OACA,UACG;AACH,gBAAY,CAAC,SAAU,iCAAK,OAAL,GAAY,QAAQ,MAAM,OAAO;AAAA;AAG1D,QAAM,mBAAmB,OAAO,SAAe;AAC7C,QAAI,gBAAgB,IAAI;AACxB,kBAAc,OAAO,eAAe;AACpC,UAAM,WAAW,MAAM,MAAM,WAAW;AAAA,MACtC,QAAQ;AAAA,MACR,MAAM;AAAA;AAER,UAAM,EAAE,aAAa,MAAM,SAAS;AACpC,gBAAY,iCACP,WADO;AAAA,MAEV,gBAAgB;AAAA;AAAA;AAIpB,SACE,oCAAC,OAAD;AAAA,IAAO,QAAQ;AAAA,IAAM,WAAU;AAAA,KAC7B,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAwD,iBAGtE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,YAEH,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,eAAD;AAAA,IACE,UAAU;AAAA,IACV,UAAU,SAAS,kBAAkB;AAAA,OAGzC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,QAAD;AAAA,IACE,QAAO;AAAA,IACP,UAAU,CAAC,MACT,CAAC,QAAQ,mBAAmB,EAAE,mBAAmB;AAAA,KAGnD,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,+CAAY,WAAZ,mBAAoB;AAAA,MAE7B,oCAAC,WAAD;AAAA,IACE,SAAQ;AAAA,IACR,OAAM;AAAA,IACN,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,IACtC,OAAO,+CAAY,WAAZ,mBAAoB;AAAA,MAE7B,oCAAC,WAAD;AAAA,IACE,WAAU;AAAA,IACV,IAAG;AAAA,IACH,OAAM;AAAA,IACN,MAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO,SAAS;AAAA,IAChB,UAAU,CAAC,MAAM,kBAAkB,GAAG;AAAA,MAExC,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,OAAM;AAAA,IACN,WAAU;AAAA,KACX,mBAGD,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,UAAD;AAAA,IACE,WAAU;AAAA,IACV,MAAK;AAAA,IACL,OAAM;AAAA,KACP;AAAA;;;AEzKjB;AAAA;AAAA;AAAA;AAIO,eAAc,EAAE,SAAS,QAAoD;AAJpF;AAKE,UAAQ,IAAI,EAAC;AACb,UAAQ,IAAI,SAAS,YAAK,UAAL,mBAAY,cAAa;AAE9C,SACE,oCAAC,OAAD;AAAA,IACE,WAAW,QACT,mBAAmB,YAAK,UAAL,mBAAY,oBAAmB;AAAA,KAGpD,oCAAC,OAAD,MACE,oCAAC,YAAD;AAAA,IAAY;AAAA,IAAkB,WAAU;AAAA,OAE1C,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,KAAD;AAAA,IAAG,WAAW,GAAG,SAAS,YAAK,UAAL,mBAAY,cAAa;AAAA,KAChD,mCAAS,WAAU,KAAE,mCAAS,WAEjC,oCAAC,KAAD;AAAA,IAAG,WAAW,GAAG,SAAS,YAAK,UAAL,mBAAY,cAAa;AAAA,KAA2C,KAAK,WAErG,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,SAAS,YAAK,UAAL,mBAAY,UAAS;AAAA;;;ACxBvC,IAAO,0BAAQ,EAAC,WAAU,YAAW,SAAQ,EAAC,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,uCAAqC,UAAS,EAAC,QAAO,EAAC,MAAK,QAAO,YAAW,QAAU,QAAO,IAAG,SAAQ,QAAU,iBAAgB,QAAU,UAAS,2BAA0B,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,iBAAgB,EAAC,MAAK,iBAAgB,YAAW,QAAO,QAAO,UAAS,SAAQ,QAAU,iBAAgB,QAAU,UAAS,oCAAmC,WAAU,QAAU,aAAY,MAAK,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,eAAc,EAAC,MAAK,eAAc,YAAW,QAAO,QAAO,QAAO,SAAQ,QAAU,iBAAgB,QAAU,UAAS,kCAAiC,WAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,qCAAoC,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,oBAAmB,EAAC,MAAK,oBAAmB,YAAW,eAAc,QAAO,QAAO,SAAQ,QAAU,iBAAgB,QAAU,UAAS,uCAAsC,WAAU,QAAU,aAAY,OAAM,aAAY,OAAM,oBAAmB,OAAM,oBAAmB,SAAO,4BAA2B,EAAC,MAAK,4BAA2B,YAAW,eAAc,QAAO,gBAAe,SAAQ,QAAU,iBAAgB,QAAU,UAAS,+CAA8C,WAAU,CAAC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,uBAAsB,EAAC,MAAK,uBAAsB,YAAW,eAAc,QAAO,WAAU,SAAQ,QAAU,iBAAgB,QAAU,UAAS,0CAAyC,WAAU,CAAC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,QAAU,SAAQ,MAAK,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,QAAU,aAAY,OAAM,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,gBAAe,EAAC,MAAK,gBAAe,YAAW,QAAO,QAAO,SAAQ,SAAQ,QAAU,iBAAgB,QAAU,UAAS,mCAAkC,WAAU,CAAC,oCAAmC,oCAAmC,qCAAoC,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,SAAO,iBAAgB,EAAC,MAAK,iBAAgB,YAAW,QAAO,QAAO,UAAS,SAAQ,QAAU,iBAAgB,QAAU,UAAS,oCAAmC,WAAU,QAAU,aAAY,MAAK,aAAY,MAAK,oBAAmB,OAAM,oBAAmB,WAAQ,OAAM;;;ACYl5F,IAAM,QAAQ,EAAE,QAAQ;AACxB,IAAM,SAAS;AAAA,EACpB,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,4BAA4B;AAAA,IACxB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA,EAEZ,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;",
  "names": []
}
